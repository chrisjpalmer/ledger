// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Ledger API
 *
 * This is the API for the ledger backend.
 *
 * API version: 0.0.1
 */

package openapi

import (
	"context"
	"net/http"
)



// LedgerAPIRouter defines the required methods for binding the api requests to a responses for the LedgerAPI
// The LedgerAPIRouter implementation should parse necessary information from the http request,
// pass the data to a LedgerAPIServicer to perform the required actions, then write the service results to the http response.
type LedgerAPIRouter interface { 
	AddIncome(http.ResponseWriter, *http.Request)
	UpdateIncome(http.ResponseWriter, *http.Request)
	DeleteIncome(http.ResponseWriter, *http.Request)
	AddExpense(http.ResponseWriter, *http.Request)
	UpdateExpense(http.ResponseWriter, *http.Request)
	DeleteExpense(http.ResponseWriter, *http.Request)
}


// LedgerAPIServicer defines the api actions for the LedgerAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type LedgerAPIServicer interface { 
	AddIncome(context.Context, int32, Income) (ImplResponse, error)
	UpdateIncome(context.Context, int32, string, Income) (ImplResponse, error)
	DeleteIncome(context.Context, int32, string) (ImplResponse, error)
	AddExpense(context.Context, int32, Expense) (ImplResponse, error)
	UpdateExpense(context.Context, int32, string, Expense) (ImplResponse, error)
	DeleteExpense(context.Context, int32, string) (ImplResponse, error)
}
